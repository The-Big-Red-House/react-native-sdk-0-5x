/**
 * Kinde Management API
 * Provides endpoints to manage your Kinde Businesses
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: support@kinde.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from './ApiClient';
import KindeSDK from './SDK/KindeSDK';
import Storage from './SDK/Storage';
import Utils from './SDK/Utils';
import authStatusConstants from './SDK/constants/auth-status.constants';

import CreateUser200Response from './model/CreateUser200Response';
import CreateUserRequest from './model/CreateUserRequest';
import CreateUserRequestIdentitiesInner from './model/CreateUserRequestIdentitiesInner';
import CreateUserRequestIdentitiesInnerDetails from './model/CreateUserRequestIdentitiesInnerDetails';
import CreateUserRequestProfile from './model/CreateUserRequestProfile';
import User from './model/User';
import UserIdentity from './model/UserIdentity';
import UserIdentityResult from './model/UserIdentityResult';
import UserProfile from './model/UserProfile';
import UserProfileV2 from './model/UserProfileV2';
import OAuthApi from './api/OAuthApi';
import UsersApi from './api/UsersApi';

/**
 * Kinde React Native SDK for authentication.<br>
 * The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
 * <p>
 * An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
 * <pre>
 * var @KindeOssReactNativeSdk05x = require('index'); // See note below*.
 * var xxxSvc = new @KindeOssReactNativeSdk05x.XxxApi(); // Allocate the API class we're going to use.
 * var yyyModel = new @KindeOssReactNativeSdk05x.Yyy(); // Construct a model instance.
 * yyyModel.someProperty = 'someValue';
 * ...
 * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
 * ...
 * </pre>
 * <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
 * and put the application logic within the callback function.</em>
 * </p>
 * <p>
 * A non-AMD browser application (discouraged) might do something like this:
 * <pre>
 * var xxxSvc = new @KindeOssReactNativeSdk05x.XxxApi(); // Allocate the API class we're going to use.
 * var yyy = new @KindeOssReactNativeSdk05x.Yyy(); // Construct a model instance.
 * yyyModel.someProperty = 'someValue';
 * ...
 * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
 * ...
 * </pre>
 * </p>
 * @module index
 * @version 0.0.1
 */
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The KindeSDK module.
     * @property {module:KindeSDK}
     */
    KindeSDK,

    /**
     * The Storage SDK module.
     * @property {module:Storage}
     */
    Storage,

    /**
     * The Utils SDK module.
     * @property {module:Utils}
     */
    Utils,

    /**
     * The authStatusConstants SDK module.
     * @property {module:authStatusConstants}
     */
    authStatusConstants,

    /**
     * The CreateUser200Response model constructor.
     * @property {module:model/CreateUser200Response}
     */
    CreateUser200Response,

    /**
     * The CreateUserRequest model constructor.
     * @property {module:model/CreateUserRequest}
     */
    CreateUserRequest,

    /**
     * The CreateUserRequestIdentitiesInner model constructor.
     * @property {module:model/CreateUserRequestIdentitiesInner}
     */
    CreateUserRequestIdentitiesInner,

    /**
     * The CreateUserRequestIdentitiesInnerDetails model constructor.
     * @property {module:model/CreateUserRequestIdentitiesInnerDetails}
     */
    CreateUserRequestIdentitiesInnerDetails,

    /**
     * The CreateUserRequestProfile model constructor.
     * @property {module:model/CreateUserRequestProfile}
     */
    CreateUserRequestProfile,

    /**
     * The User model constructor.
     * @property {module:model/User}
     */
    User,

    /**
     * The UserIdentity model constructor.
     * @property {module:model/UserIdentity}
     */
    UserIdentity,

    /**
     * The UserIdentityResult model constructor.
     * @property {module:model/UserIdentityResult}
     */
    UserIdentityResult,

    /**
     * The UserProfile model constructor.
     * @property {module:model/UserProfile}
     */
    UserProfile,

    /**
     * The UserProfileV2 model constructor.
     * @property {module:model/UserProfileV2}
     */
    UserProfileV2,

    /**
     * The OAuthApi service constructor.
     * @property {module:api/OAuthApi}
     */
    OAuthApi,

    /**
     * The UsersApi service constructor.
     * @property {module:api/UsersApi}
     */
    UsersApi
};
